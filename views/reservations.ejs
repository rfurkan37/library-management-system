<%- include('header', { title: 'Reservations - Library Management System', currentPage: 'reservations' }) %>
<div class="content-wrapper">
    <div class="page-header">
        <h1><i class="fas fa-calendar-alt"></i> Reservations Management</h1>
        <div class="header-actions">
            <a href="/reservations/new" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                New Reservation
            </a>
            <a href="/reservations/customers" class="btn btn-info">
                <i class="fas fa-users"></i>
                Manage Customers
            </a>
        </div>
    </div>

    <!-- Filters -->
    <div class="filters-section">
        <form method="GET" class="filters-form">
            <div class="filter-group">
                <label for="status">Status:</label>
                <select name="status" id="status">
                    <option value="">All Statuses</option>
                    <option value="active" <%= status === 'active' ? 'selected' : '' %>>Active</option>
                    <option value="overdue" <%= status === 'overdue' ? 'selected' : '' %>>Overdue</option>
                    <option value="returned" <%= status === 'returned' ? 'selected' : '' %>>Returned</option>
                    <option value="cancelled" <%= status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                </select>
            </div>
            <div class="filter-group">
                <label for="customer">Customer:</label>
                <input type="text" name="customer" id="customer" placeholder="Search customer..." value="<%= customer || '' %>">
            </div>
            <div class="filter-group">
                <label for="book">Book:</label>
                <input type="text" name="book" id="book" placeholder="Search book..." value="<%= book || '' %>">
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
            <a href="/reservations" class="btn btn-secondary">Clear</a>
        </form>
    </div>

    <!-- Stats Summary -->
    <div class="stats-summary">
        <div class="stat-item">
            <span class="stat-number"><%= reservations.filter(r => r.status === 'active').length %></span>
            <span class="stat-label">Active</span>
        </div>
        <div class="stat-item">
            <span class="stat-number"><%= reservations.filter(r => r.status === 'overdue').length %></span>
            <span class="stat-label">Overdue</span>
        </div>
        <div class="stat-item">
            <span class="stat-number"><%= reservations.filter(r => r.status === 'returned').length %></span>
            <span class="stat-label">Returned</span>
        </div>
    </div>

    <!-- Reservations Table -->
    <div class="table-container">
        <% if (reservations && reservations.length > 0) { %>
            <table class="data-table">
                <thead>
                    <tr>
                        <th>Book</th>
                        <th>Customer</th>
                        <th>Status</th>
                        <th>Due Date</th>
                        <th>Fine</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% reservations.forEach(reservation => { %>
                        <tr>
                            <td>
                                <div class="book-info">
                                    <% if (reservation.book.coverUrl) { %>
                                        <img src="<%= reservation.book.coverUrl %>" alt="Book cover" class="book-cover-small">
                                    <% } else { %>
                                        <div class="book-cover-placeholder">
                                            <i class="fas fa-book"></i>
                                        </div>
                                    <% } %>
                                    <div>
                                        <strong><%= reservation.book.title %></strong><br>
                                        <small>by <%= reservation.book.author %></small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="customer-info">
                                    <strong><%= reservation.customer.name %></strong><br>
                                    <small><%= reservation.customer.email %></small>
                                </div>
                            </td>
                            <td>
                                <span class="status-badge status-<%= reservation.status %>">
                                    <%= reservation.status.charAt(0).toUpperCase() + reservation.status.slice(1) %>
                                </span>
                            </td>
                            <td>
                                <%= new Date(reservation.dueDate).toLocaleDateString() %>
                                <% if (reservation.status === 'active' && new Date(reservation.dueDate) < new Date()) { %>
                                    <br><small class="overdue-text">Overdue!</small>
                                <% } %>
                            </td>
                            <td>
                                <% if (reservation.fine && reservation.fine > 0) { %>
                                    <span class="fine-amount">$<%= reservation.fine.toFixed(2) %></span>
                                <% } else { %>
                                    <span class="no-fine">No fine</span>
                                <% } %>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <% if (reservation.status === 'active' || reservation.status === 'overdue') { %>
                                        <button onclick="returnBook('<%= reservation._id %>')" class="btn btn-sm btn-success">
                                            <i class="fas fa-check"></i> Return
                                        </button>
                                        <button onclick="renewReservation('<%= reservation._id %>')" class="btn btn-sm btn-warning">
                                            <i class="fas fa-redo"></i> Renew
                                        </button>
                                    <% } %>
                                    <% if (reservation.status !== 'returned') { %>
                                        <button onclick="cancelReservation('<%= reservation._id %>')" class="btn btn-sm btn-danger">
                                            <i class="fas fa-times"></i> Cancel
                                        </button>
                                    <% } %>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>

            <!-- Pagination -->
            <% if (pagination && pagination.pages > 1) { %>
                <div class="pagination">
                    <% if (pagination.page > 1) { %>
                        <a href="?page=<%= pagination.page - 1 %>&status=<%= status || '' %>&customer=<%= customer || '' %>&book=<%= book || '' %>" class="btn btn-secondary btn-sm">Previous</a>
                    <% } %>
                    
                    <span class="pagination-info">
                        Page <%= pagination.page %> of <%= pagination.pages %> 
                        (<%= pagination.total %> total)
                    </span>
                    
                    <% if (pagination.page < pagination.pages) { %>
                        <a href="?page=<%= pagination.page + 1 %>&status=<%= status || '' %>&customer=<%= customer || '' %>&book=<%= book || '' %>" class="btn btn-secondary btn-sm">Next</a>
                    <% } %>
                </div>
            <% } %>
        <% } else { %>
            <div class="empty-state">
                <i class="fas fa-calendar-times"></i>
                <h3>No reservations found</h3>
                <p>There are no reservations matching your criteria.</p>
                <a href="/reservations/new" class="btn btn-primary">Create First Reservation</a>
            </div>
        <% } %>
    </div>
</div>

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2rem;
        border-bottom: 1px solid var(--gray-200);
    }

    .page-header h1 {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--gray-800);
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .filters-section {
        padding: 1.5rem 2rem;
        background: var(--gray-100);
        border-bottom: 1px solid var(--gray-200);
    }

    .filters-form {
        display: flex;
        gap: 1rem;
        align-items: end;
        flex-wrap: wrap;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .filter-group label {
        font-weight: 500;
        color: var(--gray-700);
        font-size: 0.9rem;
    }

    .filter-group input,
    .filter-group select {
        padding: 0.5rem;
        border: 1px solid var(--gray-300);
        border-radius: 6px;
        min-width: 150px;
    }

    .stats-summary {
        display: flex;
        gap: 2rem;
        padding: 1.5rem 2rem;
        background: white;
        border-bottom: 1px solid var(--gray-200);
    }

    .stat-item {
        text-align: center;
    }

    .stat-number {
        display: block;
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--primary-color);
    }

    .stat-label {
        font-size: 0.9rem;
        color: var(--gray-600);
    }

    .table-container {
        padding: 2rem;
    }

    .data-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 2rem;
    }

    .data-table th,
    .data-table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid var(--gray-200);
    }

    .data-table th {
        background: var(--gray-100);
        font-weight: 600;
        color: var(--gray-700);
    }

    .book-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .book-cover-small {
        width: 40px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
    }

    .book-cover-placeholder {
        width: 40px;
        height: 60px;
        background: var(--gray-200);
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--gray-500);
    }

    .customer-info strong {
        color: var(--gray-800);
    }

    .customer-info small {
        color: var(--gray-600);
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-active {
        background: rgba(72, 187, 120, 0.1);
        color: var(--success-color);
    }

    .status-overdue {
        background: rgba(245, 101, 101, 0.1);
        color: var(--error-color);
    }

    .status-returned {
        background: rgba(113, 128, 150, 0.1);
        color: var(--gray-600);
    }

    .status-cancelled {
        background: rgba(237, 137, 54, 0.1);
        color: var(--warning-color);
    }

    .overdue-text {
        color: var(--error-color);
        font-weight: 600;
    }

    .fine-amount {
        color: var(--error-color);
        font-weight: 600;
    }

    .no-fine {
        color: var(--gray-500);
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
    }

    .pagination-info {
        color: var(--gray-600);
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        color: var(--gray-600);
    }

    .empty-state i {
        font-size: 3rem;
        margin-bottom: 1rem;
        color: var(--gray-400);
    }

    .empty-state h3 {
        margin-bottom: 0.5rem;
        color: var(--gray-700);
    }

    @media (max-width: 768px) {
        .page-header {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }

        .filters-form {
            flex-direction: column;
        }

        .filter-group input,
        .filter-group select {
            min-width: auto;
        }

        .stats-summary {
            justify-content: space-around;
        }

        .data-table {
            font-size: 0.9rem;
        }

        .action-buttons {
            flex-direction: column;
        }
    }
</style>

<script>
    async function returnBook(reservationId) {
        if (!confirm('Are you sure you want to mark this book as returned?')) return;
        
        try {
            const response = await fetch('/reservations/' + reservationId + '/return', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' }
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Book returned successfully! ' + (result.fine > 0 ? 'Fine: $' + result.fine.toFixed(2) : 'No fine.'));
                location.reload();
            } else {
                alert('Error: ' + result.error);
            }
        } catch (error) {
            alert('Error returning book: ' + error.message);
        }
    }
    
    async function renewReservation(reservationId) {
        if (!confirm('Are you sure you want to renew this reservation?')) return;
        
        try {
            const response = await fetch('/reservations/' + reservationId + '/renew', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' }
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Reservation renewed successfully!');
                location.reload();
            } else {
                alert('Error: ' + result.error);
            }
        } catch (error) {
            alert('Error renewing reservation: ' + error.message);
        }
    }
    
    async function cancelReservation(reservationId) {
        if (!confirm('Are you sure you want to cancel this reservation?')) return;
        
        try {
            const response = await fetch('/reservations/' + reservationId, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Reservation cancelled successfully!');
                location.reload();
            } else {
                alert('Error: ' + result.error);
            }
        } catch (error) {
            alert('Error cancelling reservation: ' + error.message);
        }
    }
</script>

<%- include('footer') %>